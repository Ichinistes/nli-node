let Conf,validateApiKey,validateCityId,validateUnits;_d55‍.x([["configKey",()=>configKey],["configure",()=>configure]]);_d55‍.w("conf",[["default",["Conf"],function(v){Conf=v}]]);_d55‍.w("./utils",[["validateApiKey",["validateApiKey"],function(v){validateApiKey=v}],["validateCityId",["validateCityId"],function(v){validateCityId=v}],["validateUnits",["validateUnits"],function(v){validateUnits=v}]]);


       const configKey = 'weather-cli';

       async function configure(args) {
    const config = new Conf();

    if (args.clear) {
        config.clear();
        console.log(`The configuration for weather-cli has been deleted.
    Current value: ${config.get(configKey)}
    `);
        return;
    }

    if (args.path) {
        console.log(`The config file path is: 
    ${config.path}
    `);
        return;
    }

    let currentConfigObject = config.get(configKey);
    if (args.p || args.print) {
        _d55‍.g.console.log(currentConfigObject);
        return;
    }

    currentConfigObject = currentConfigObject || {};

    let apiKey =
        args.apiKey || args.apikey || args['api-key'] || args.key || args.k;
    if (!apiKey) {
        apiKey = currentConfigObject.apiKey;
    }
    if (!validateApiKey(apiKey)) {
        return;
    }

    let cityId =
        args.city || args.cityId || args.cityID || args['city-id'] || args.c;
    if (!cityId) {
        cityId = currentConfigObject.cityId || 4862034;
        cityId = Number(cityId);
    }
    if (!validateCityId(cityId)) {
        return;
    }

    let units = args.units || args.unit || args.u;
    if (!units) {
        units = currentConfigObject.units || 'Kelvin';
    }
    if (!validateUnits(units)) {
        return;
    }

    config.set(configKey, { apiKey: apiKey, cityId: cityId, units: units });
}